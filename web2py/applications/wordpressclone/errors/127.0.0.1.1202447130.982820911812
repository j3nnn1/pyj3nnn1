(dp1
S'output'
p2
S''
sS'layer'
p3
S'applications/blog/controllers/default.py'
p4
sS'code'
p5
S'from gluon.fileutils import check_credentials\nsession.authorized=check_credentials(request)\n\nresponse.title = "PyPress - a web2py powered weblog"\nresponse.keywords = "web2py, Gluon, Python, Enterprise, Web, Framework, PyPress"\nresponse.description = "Just another PyPress weblog"\n\n# This dynamically adds the pages to the menu\npages = db(db.posts.post_type == \'page\').select(db.posts.ALL)\nitems = []\nfor page in pages:\n    item = [page.post_title, False, \'/%(app)s/default/page/%(id)s\' % {\'app\':request.application, \'id\':page.id}]\n    items.append(item)\nresponse.menu = items\n\n# This returns all the categories and their post count\ncats = db().select(db.categories.ALL)\nitems = []\nfor cat in cats:\n    count = len(db(\n                   (db.posts.post_type==\'post\') & \n                   (db.posts.post_status==\'published\') & \n                   (db.posts.id==db.cat_to_post.post_id) & \n                   (db.cat_to_post.cat_id==cat.id)\n                   ).select(db.posts.ALL))\n    if count > 0:\n        item = [cat.category_name, count, \'/%(app)s/default/category/%(name)s\' % {\'app\':request.application, \'name\':cat.category_name}]\n        items.append(item)\nresponse.categories = items\n\n# This returns all the links\nlinks = db().select(db.links.ALL)\nitems = []\nfor link in links:\n    item = [link.link_title, link.link_url]\n    items.append(item)\nresponse.links = items\n\n# The main page\n# Shows the first 10 posts    \ndef index():\n    posts = db((db.posts.post_status == \'published\') & (db.posts.post_type == \'post\')).select(~db.posts.ALL, orderby=db.posts.post_time)\n    return dict(posts = posts)\n\n# The post page\n# Shows the entire post, the comments, and the comment form\ndef post():\n    try: \n        post_id = int(request.args[0])\n        post = db(db.posts.id == post_id).select()[0]\n        comments = db(db.comments.post_id == post_id).select(db.comments.ALL)\n        comment_count = len(db(db.comments.post_id == post_id).select(db.comments.ALL))\n        comment_form = SQLFORM(db.comments, fields = [\'comment_author\',\'comment_author_email\', \'comment_text\'], labels = comment_labels)\n        return dict(post = post, comments = comments, comment_form = comment_form, comment_count = comment_count)\n    except: \n        redirect(URL(r = request,f = \'index\'))\n\n# The page page\n# Shows the entire post. Does not show a page\ndef page():\n    return dict()\n\n# The category page\n# Shows all the posts in the requested category\ndef category():\n    cat_name = request.args[0]\n    posts = db((db.posts.post_status == \'published\') & (db.posts.post_type == \'post\')).select(db.posts.ALL)\n    return dict(posts = posts)\n\ndef add():\n    return dict()\n\nresponse._vars=index()'
p6
sS'traceback'
p7
S'Traceback (most recent call last):\n  File "C:\\Documents and Settings\\csharp\\Desktop\\web2py\\gluon\\restricted.py", line 60, in restricted\n    exec ccode in environment\n  File "applications/blog/controllers/default.py", line 73, in <module>\n  File "applications/blog/controllers/default.py", line 42, in index\n    posts = db((db.posts.post_status == \'published\') & (db.posts.post_type == \'post\')).select(~db.posts.ALL, orderby=db.posts.post_time)\nAttributeError: SQLALL instance has no attribute \'__invert__\'\n'
p8
s.