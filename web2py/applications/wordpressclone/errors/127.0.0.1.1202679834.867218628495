(dp1
S'output'
p2
S''
sS'layer'
p3
S'applications/blog/models/db.py'
p4
sS'code'
p5
S'# try something like\ndb=SQLDB("sqlite://db.db")\n\nimport datetime\n\ndb.define_table(\'posts\',\n    SQLField(\'post_title\', required=True),\n    SQLField(\'post_text\', \'text\'),\n    SQLField(\'post_time\', \'datetime\', default=datetime.datetime.today()),\n    SQLField(\'post_type\', required=True),\n    SQLField(\'post_category\', required=True))\n\ndb.define_table(\'comments\',\n    SQLField(\'post_id\', db.posts, required=True),\n    SQLField(\'comment_author\'),\n    SQLField(\'comment_author_email\', required=True),\n    SQLField(\'comment_author_website\'),\n    SQLField(\'comment_text\', \'text\', required=True),\n    SQLField(\'comment_time\', \'datetime\', required=True, default=datetime.datetime.today()))\n\ndb.define_table(\'categories\',\n    SQLField(\'category_name\', required=True))\n    \ndb.define_table(\'links\',\n    SQLField(\'link_title\', required=True),\n    SQLField(\'link_url\', required=True))\n\ndb.posts.post_type.requires = IS_IN_SET([\'post\', \'page\'])\ndb.posts.post_category.requires = IS_IN_DB(db, \'categories.id\', \'categories.name\')\n\npost_labels = {\n    \'post_title\':\'Title\',\n    \'post_text\':\'Post\',\n    \'post_time\':\'Post Date\',\n    \'post_type\':\'Type\',\n    \'post_category\':\'Category\'\n}\n\ncomment_labels = {\n    \'comment_author\':\'Name\',\n    \'comment_author_email\':\'Email\',\n    \'comment_author_website\':\'Website\',\n    \'comment_text\':\'Comment\',\n    \'post_id\':\'Post ID\'\n}\n\nlink_labels = {\n    \'link_title\':\'Name\',\n    \'link_url\':\'URL\'\n}\n\ncat_labels = {\n    \'category_name\':\'Name\'\n}'
p6
sS'traceback'
p7
S'Traceback (most recent call last):\n  File "C:\\Documents and Settings\\csharp\\Desktop\\web2py\\gluon\\restricted.py", line 60, in restricted\n    exec ccode in environment\n  File "applications/blog/models/db.py", line 29, in <module>\n    db.posts.post_category.requires = IS_IN_DB(db, \'categories.id\', \'categories.name\')\n  File "C:\\Documents and Settings\\csharp\\Desktop\\web2py\\gluon\\validators.py", line 104, in IS_IN_DB\n    records=dbset.select(*fields,**dict(orderby=\', \'.join(fields)))\n  File "C:\\Documents and Settings\\csharp\\Desktop\\web2py\\gluon\\sql.py", line 755, in select\n    r=response(query)\n  File "C:\\Documents and Settings\\csharp\\Desktop\\web2py\\gluon\\sql.py", line 751, in response\n    self._db._execute(query)\n  File "C:\\Documents and Settings\\csharp\\Desktop\\web2py\\gluon\\sql.py", line 248, in <lambda>\n    self._execute=lambda *a,**b: self._cursor.execute(*a,**b)\nOperationalError: no such column: categories.name\n'
p8
s.