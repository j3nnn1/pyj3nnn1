(dp1
S'output'
p2
S''
sS'layer'
p3
S'/home/j3nnn1/git/pyj3nnn1/web2py/applications/tweepy/controllers/default.py'
p4
sS'code'
p5
S'# -*- coding: utf-8 -*- \nimport tweepy\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################  \n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n    """\n    user = tweepy.api.get_user(\'j3nnn1\')\n    \n    nameuser           = user.name\n    imageuser          = user.profile_image_url\n    statususer         = user.status.text\n    dictionarytweet    ={}\n    \n    tweetpublic  = tweepy.api.public_timeline()\n    \n    for i, tweet in enumerate(public_tweets):\n        userpublic = tweet.user\n        dictionarytweet[i]={name: userpublic.screen_name, status:tweet.text, url_pic:userpublic.profile_image_url}\n    \n    return dict(nameuser=nameuser, imageuser=imageuser, statususer=statususer, public=dictionarytweet)\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login \n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    session.forget()\n    return service()\n\nresponse._vars=response._caller(index)\n'
p6
sS'snapshot'
p7
(dp8
S'exception'
p9
(dp10
S'__hash__'
p11
S"<method-wrapper '__hash__' of exceptions.NameError object>"
p12
sS'__setattr__'
p13
S"<method-wrapper '__setattr__' of exceptions.NameError object>"
p14
sS'__reduce_ex__'
p15
S'<built-in method __reduce_ex__ of exceptions.NameError object>'
p16
sS'__getslice__'
p17
S"<method-wrapper '__getslice__' of exceptions.NameError object>"
p18
sS'__getitem__'
p19
S"<method-wrapper '__getitem__' of exceptions.NameError object>"
p20
sS'__setstate__'
p21
S'<built-in method __setstate__ of exceptions.NameError object>'
p22
sS'__reduce__'
p23
S'<built-in method __reduce__ of exceptions.NameError object>'
p24
sS'__str__'
p25
S"<method-wrapper '__str__' of exceptions.NameError object>"
p26
sS'__format__'
p27
S'<built-in method __format__ of exceptions.NameError object>'
p28
sS'__getattribute__'
p29
S"<method-wrapper '__getattribute__' of exceptions.NameError object>"
p30
sS'__class__'
p31
S"<type 'exceptions.NameError'>"
p32
sS'__unicode__'
p33
S'<built-in method __unicode__ of exceptions.NameError object>'
p34
sS'__delattr__'
p35
S"<method-wrapper '__delattr__' of exceptions.NameError object>"
p36
sS'__subclasshook__'
p37
S'<built-in method __subclasshook__ of type object>'
p38
sS'__repr__'
p39
S"<method-wrapper '__repr__' of exceptions.NameError object>"
p40
sS'args'
p41
S'("global name \'public_tweets\' is not defined",)'
p42
sS'__dict__'
p43
S'{}'
p44
sS'__sizeof__'
p45
S'<built-in method __sizeof__ of exceptions.NameError object>'
p46
sS'__doc__'
p47
S"'Name not found globally.'"
p48
sS'__init__'
p49
S"<method-wrapper '__init__' of exceptions.NameError object>"
p50
sS'__new__'
p51
S'<built-in method __new__ of type object>'
p52
ssS'evalue'
p53
S"global name 'public_tweets' is not defined"
p54
sS'request'
p55
(dp56
S'function'
p57
S"'index'"
p58
sS'body'
p59
S'<cStringIO.StringO object>'
p60
sS'wsgi'
p61
S"<Storage {'start_response': <function <lambda> a...>, 'HTTP_ACCEPT_ENCODING': 'gzip,deflate,sdch'}}>"
p62
sS'extension'
p63
S"'html'"
p64
sS'vars'
p65
S'<Storage {}>'
p66
sS'cid'
p67
S'None'
p68
sS'url'
p69
S'<gluon.html.XML object>'
p70
sg41
S'[]'
p71
sS'controller'
p72
S"'default'"
p73
sS'cookies'
p74
S"<SimpleCookie: session_id_admin='127-0-0-1-b501e...'127-0-0-1-1ec39e37-b351-48fa-af74-3086837ce8e1'>"
p75
sS'application'
p76
S"'tweepy'"
p77
sS'ajax'
p78
S'False'
p79
sS'client'
p80
S"'127.0.0.1'"
p81
sS'env'
p82
S"<Storage {'http_user_agent': 'Mozilla/5.0 (X11; ...e': False, 'path_info': '/tweepy/default/index'}>"
p83
sS'raw_args'
p84
S'None'
p85
sS'get_vars'
p86
S'<Storage {}>'
p87
sS'folder'
p88
S"'/home/j3nnn1/git/pyj3nnn1/web2py/applications/tweepy/'"
p89
sS'now'
p90
S'datetime.datetime(2010, 10, 12, 19, 14, 57, 683747)'
p91
sS'post_vars'
p92
S'<Storage {}>'
p93
ssS'frames'
p94
(lp95
(dp96
S'file'
p97
S'/home/j3nnn1/git/pyj3nnn1/web2py/gluon/restricted.py'
p98
sS'dump'
p99
(dp100
S'environment'
p101
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, 'CODE': <class 'gluon.html.CODE'>, 'CRYPT': <class 'gluon.validators.CRYPT'>, ...}"
p102
sS'ccode'
p103
S'<code object <module> at 0xa32d6e0, file "/home/...lications/tweepy/controllers/default.py", line 2>'
p104
ssS'lnum'
p105
I188
sS'lines'
p106
(dp107
I192
S'        # XXX Show exception in Wing IDE if running in debugger'
p108
sI183
S'        if type(code) == types.CodeType:'
p109
sI184
S'            ccode = code'
p110
sI185
S'        else:'
p111
sI186
S'            ccode = compile2(code,layer)'
p112
sI187
S''
sI188
S'        exec ccode in environment'
p113
sI189
S'    except HTTP:'
p114
sI190
S'        raise'
p115
sI191
S'    except Exception:'
p116
ssS'call'
p117
S"(code='# -*- coding: utf-8 -*- \\nimport tweepy\\n#########...ervice()\\n\\nresponse._vars=response._caller(index)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, 'CODE': <class 'gluon.html.CODE'>, 'CRYPT': <class 'gluon.validators.CRYPT'>, ...}, layer='/home/j3nnn1/git/pyj3nnn1/web2py/applications/tweepy/controllers/default.py')"
p118
sS'func'
p119
S'restricted'
p120
sa(dp121
g97
S'/home/j3nnn1/git/pyj3nnn1/web2py/applications/tweepy/controllers/default.py'
p122
sg99
(dp123
sg105
I67
sg106
(dp124
I64
S'    session.forget()'
p125
sI65
S'    return service()'
p126
sI56
S''
sI57
S'def call():'
p127
sI58
S'    """'
p128
sI59
S'    exposes services. for example:'
p129
sI60
S'    http://..../[app]/default/call/jsonrpc'
p130
sI61
S'    decorate with @services.jsonrpc the functions to expose'
p131
sI62
S'    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv'
p132
sI63
S'    """'
p133
ssg117
S'()'
p134
sg119
S'<module>'
p135
sa(dp136
g97
S'/home/j3nnn1/git/pyj3nnn1/web2py/gluon/globals.py'
p137
sg99
(dp138
S'self'
p139
S'undefined'
p140
sS'f'
S'<function index>'
p141
ssg105
I96
sg106
(dp142
I96
S'        self._caller = lambda f: f()'
p143
sI97
S'        self._view_environment = None'
p144
sI98
S'        self._custom_commit = None'
p145
sI99
S'        self._custom_rollback = None'
p146
sI100
S''
sI91
S"        self.flash = ''           # used by the default view layout"
p147
sI92
S'        self.meta = Storage()     # used by web2py_ajax.html'
p148
sI93
S'        self.menu = []            # used by the default view layout'
p149
sI94
S'        self.files = []           # used by web2py_ajax.html'
p150
sI95
S'        self._vars = None'
p151
ssg117
S'(f=<function index>)'
p152
sg119
S'<lambda>'
p153
sa(dp154
g97
S'/home/j3nnn1/git/pyj3nnn1/web2py/applications/tweepy/controllers/default.py'
p155
sg99
(dp156
S'i'
g140
sS'builtinenumerate'
p157
S"<type 'enumerate'>"
p158
sS'tweet'
p159
g140
sS'public_tweets'
p160
g140
ssg105
I25
sg106
(dp161
I20
S'    statususer         = user.status.text'
p162
sI21
S'    dictionarytweet    ={}'
p163
sI22
S''
sI23
S'    tweetpublic  = tweepy.api.public_timeline()'
p164
sI24
S''
sI25
S'    for i, tweet in enumerate(public_tweets):'
p165
sI26
S'        userpublic = tweet.user'
p166
sI27
S'        dictionarytweet[i]={name: userpublic.screen_name, status:tweet.text, url_pic:userpublic.profile_image_url}'
p167
sI28
S''
sI29
S'    return dict(nameuser=nameuser, imageuser=imageuser, statususer=statususer, public=dictionarytweet)'
p168
ssg117
S'()'
p169
sg119
S'index'
p170
sasS'pyver'
p171
S'Python 2.6.6: /usr/bin/python'
p172
sS'session'
p173
(dp174
S'auth'
p175
S'None'
p176
ssS'etype'
p177
S"<type 'exceptions.NameError'>"
p178
sS'date'
p179
S'Tue Oct 12 19:14:59 2010'
p180
sS'response'
p181
(dp182
S'status'
p183
S'200'
p184
sg59
S'<cStringIO.StringO object>'
p185
sg74
S"<SimpleCookie: session_id_tweepy='127-0-0-1-316504f2-0da6-4968-8ef6-728ad932eccd'>"
p186
sS'_vars'
p187
S'None'
p188
sS'title'
p189
S"'tweepy'"
p190
sS'session_file'
p191
S"<open file '/home/j3nnn1/git/pyj3nnn1/web2py/app...16504f2-0da6-4968-8ef6-728ad932eccd', mode 'rb+'>"
p192
sS'flash'
p193
S"''"
p194
sS'_custom_rollback'
p195
S'None'
p196
sS'session_id'
p197
S"'127-0-0-1-316504f2-0da6-4968-8ef6-728ad932eccd'"
p198
sS'headers'
p199
S"<Storage {'Expires': 'mar, 12 oct 2010 23:44:57 ...he, must-revalidate, post-check=0, pre-check=0'}>"
p200
sS'meta'
p201
S"<Storage {'keywords': 'bla bla bla', 'description': 'describe your app', 'author': 'you'}>"
p202
sS'session_filename'
p203
S"'/home/j3nnn1/git/pyj3nnn1/web2py/applications/tw...ns/127-0-0-1-316504f2-0da6-4968-8ef6-728ad932eccd'"
p204
sS'postprocessing'
p205
S'[]'
p206
sS'menu'
p207
S"[(<lazyT 'Index'>, False, <gluon.html.XML object>, []), (<lazyT 'Edit'>, False, <gluon.html.XML object>, [(<lazyT 'Controller'>, False, <gluon.html.XML object>), (<lazyT 'View'>, False, <gluon.html.XML object>), (<lazyT 'Layout'>, False, <gluon.html.XML object>), (<lazyT 'Stylesheet'>, False, <gluon.html.XML object>), (<lazyT 'DB Model'>, False, <gluon.html.XML object>), (<lazyT 'Menu Model'>, False, <gluon.html.XML object>), (<lazyT 'Database'>, False, <gluon.html.XML object>)])]"
p208
sS'_view_environment'
p209
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, 'CODE': <class 'gluon.html.CODE'>, 'CRYPT': <class 'gluon.validators.CRYPT'>, ...}"
p210
sS'subtitle'
p211
S"<lazyT 'customize me!'>"
p212
sS'session_id_name'
p213
S"'session_id_tweepy'"
p214
sS'_custom_commit'
p215
S'None'
p216
sS'_caller'
p217
S'<function <lambda>>'
p218
sS'files'
p219
S'[]'
p220
sS'view'
p221
S"'default/index.html'"
p222
ssS'locals'
p223
(dp224
S'dictionarytweet'
p225
g44
sS'imageuser'
p226
S"'http://a1.twimg.com/profile_images/1110270905/20091102_BooFromMonstersInc_normal.jpg'"
p227
sS'tweetpublic'
p228
S'[<tweepy.models.Status object at 0xa41058c>, <tw...b0c>, <tweepy.models.Status object at 0xa45540c>]'
p229
sS'user'
p230
S'<tweepy.models.User object>'
p231
sS'nameuser'
p232
S"'jenn'"
p233
sS'statususer'
p234
S"'RT @web2pyBrasil: Mais um site muito bonito desenvolvido com web2py http://www.elizabethscanvas.org/'"
p235
sssS'traceback'
p236
S'Traceback (most recent call last):\n  File "/home/j3nnn1/git/pyj3nnn1/web2py/gluon/restricted.py", line 188, in restricted\n    exec ccode in environment\n  File "/home/j3nnn1/git/pyj3nnn1/web2py/applications/tweepy/controllers/default.py", line 67, in <module>\n  File "/home/j3nnn1/git/pyj3nnn1/web2py/gluon/globals.py", line 96, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/j3nnn1/git/pyj3nnn1/web2py/applications/tweepy/controllers/default.py", line 25, in index\n    for i, tweet in enumerate(public_tweets):\nNameError: global name \'public_tweets\' is not defined\n'
p237
s.